name: Build

on:
  push:
    branches:
      - '*'
      - '!l10n_dev'

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target: ["Android", "Windows", "iOS"] # ["Android", "Windows", "Linux", "macOS", "iOS"]
        include:
          - target: Android
            os: ubuntu-latest
          - target: Windows
            os: windows-latest
          # - target: Linux
          #   os: ubuntu-latest
          # - target: macOS
          #   os: macos-latest
          - target: iOS
            os: macos-latest

    name: ${{matrix.target}}
    runs-on: ${{matrix.os}}
    env:
      APP_TITLE: Chatsen
      APP_NAME: chatsen
      APP_PATH: chatsen
      APP_ORG: com.chatsen

    steps:
      - name: Set up sed
        if: matrix.os != 'macos-latest'
        run: echo "sed=sed" >> $GITHUB_ENV

      - name: Set up sed for macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install gnu-sed
          echo "sed=gsed" >> $GITHUB_ENV

      - name: Checking out the ${{env.APP_TITLE}} source code
        uses: actions/checkout@v3
        with:
          path: ${{env.APP_PATH}}

      - name: Checking out flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Check for flutter updates
        run: flutter upgrade

      - name: Setting up the project
        working-directory: ${{env.APP_PATH}}
        run: flutter create --org ${{env.APP_ORG}} .

      - name: Cleaning up the test directory
        working-directory: ${{env.APP_PATH}}
        run: rm -rf test

      - name: Building required generated source files
        working-directory: ${{env.APP_PATH}}
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Building ${{env.APP_TITLE}} for ${{matrix.target}}
        working-directory: ${{env.APP_PATH}}
        run: flutter build ${{matrix.target}} --release --no-codesign
